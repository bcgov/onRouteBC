apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: ${NAME}-${ZONE}
  app.kubernetes.io/part-of: ${NAME}-${ZONE}
parameters:
  - name: NAME
    description: Module name
    value: onroutebc
  - name: COMPONENT
    description: Component name
    value: frontend
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: IMAGE_TAG
    description: Image tag to use
    value: latest
  - name: DOMAIN
    value: apps.silver.devops.gov.bc.ca
  - name: CPU_REQUEST
    value: "25m"
  - name: MEMORY_REQUEST
    value: "50Mi"
  - name: CPU_LIMIT
    value: "75m"
  - name: MEMORY_LIMIT
    value: "150Mi"
  - name: MIN_REPLICAS
    description: The minimum amount of replicas for the horizontal pod autoscaler.
    value: "3"
  - name: MAX_REPLICAS
    description: The maximum amount of replicas for the horizontal pod autoscaler.
    value: "5"
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: PROMOTE
    description: Image (namespace/name:tag) to promote/import
    value: bcgov/onroutebc:prod-frontend
  - name: DATABASE_NAME
    description: Name of Database to connect to
    required: true
  - name: DATABASE_USER
    description: User connecting to database
    required: true
  - name: DATABASE_PASSWORD
    description: Password of user connecting to database
    required: true
  - name: DATABASE_HOST
    description: Host url/service of database connection
    required: true
  - name: AUTH0_ISSUER_URL
    description: The principal that issued the JWT
    required: true
  - name: AUTH0_AUDIENCE
    description: Identifies the recipients that the JWT is intended for
    required: true
  - name: AUTH0_IGNORE_EXP
    description: The boolean flag to ignore the JWT expiration
    required: true
  - name: CDOGS_CLIENT_ID
    description: The keycloak client ID for common hosted CDOGS
    required: true
  - name: CDOGS_CLIENT_SECRET
    description: The keycloak client secret for common hosted CDOGS
    required: true
  - name: CDOGS_TOKEN_URL
    description: The keycloak url for common hosted CDOGS
    required: true
  - name: CDOGS_URL
    description: The CDOGS API url 
  - name: BASICAUTH_USERNAME
    description: The basic auth username for COMS
    required: true
  - name: BASICAUTH_PASSWORD
    description: The basic auth password for COMS
    required: true
  - name: COMS_URL
    description: The URL for the deployed instance of COMS
    required: true
  - name: COMS_AUTH_TYPE
    description: The identifier to determine whether COMS auth mode is basic-auth or full-auth
    required: true
  - name: COMS_BUCKET_ID
    description: The Uuid representing the bucket
    required: true
  - name: COMS_PRESIGNED_URL_EXPIRY
    description: The exipry value (seconds) of the presigned URL
    required: true
  - name: DOPS_S3_ACCESS_TYPE
    description: The key to switch between COMS or Direct access
    required: true
  - name: DOPS_S3_ACCESSKEYID
    description: The Access Key for your S3 compatible object storage account
    required: true
  - name: DOPS_S3_BUCKET
    description: The object storage bucket name
    required: true
  - name: DOPS_S3_PRESIGNED_URL_EXPIRY
    description: The expiry time for pre-signed URLs to objects in seconds
    required: true
  - name: DOPS_S3_ENDPOINT
    description: Object store URL
    required: true
  - name: DOPS_S3_KEY
    description: The base path for storage location
    required: true
  - name: DOPS_S3_SECRETACCESSKEY
    description: The Secret Access Key for your S3 compatible object storage account
    required: true
  - name: CHES_TOKEN_URL
    description: The keycloak url for common hosted CHES
    required: true    
  - name: CHES_CLIENT_ID
    description: Client Id to request the access token for connecting to CHES
    required: true
  - name: CHES_CLIENT_SECRET
    description: Client Secret to request the access token for connecting to CHES
    required: true
  - name: CHES_URL
    description: The CHES API url
  - name: NODE_ENV
    description: The NODE Environment
    required: true
  - name: MOTIPAY_API_KEY
    description: API Key for MOTI Pay
    required: true  
  - name: MOTIPAY_MERCHANT_ID
    description: Merchant ID for MOTI Pay
    required: true  
  - name: MOTIPAY_BASE_URL
    description: Base URL for MOTI Pay
    required: true    
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: ${IMAGE_TAG}
          from:
            kind: DockerImage
            name: ${REGISTRY}/${PROMOTE}
          referencePolicy:
            type: Local
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    data:
      config.js: |-
        const envConfig = (() => {
          return {
            "VITE_DEPLOY_ENVIRONMENT":"${ZONE}",
            "VITE_API_VEHICLE_URL":"https://${NAME}-${ZONE}-backend-vehicles.${DOMAIN}",
            "VITE_AUTH0_ISSUER_URL":"${AUTH0_ISSUER_URL}",
            "VITE_AUTH0_AUDIENCE":"${AUTH0_AUDIENCE}"
          };
        })();
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      replicas: 1
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: ${NAME}-${ZONE}-${COMPONENT}:${IMAGE_TAG}
      selector:
        deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: ${NAME}-${ZONE}
            deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
        spec:
          containers:
            - image: ${NAME}-${ZONE}-${COMPONENT}:${IMAGE_TAG}
              imagePullPolicy: Always
              name: ${NAME}
              ports:
                - containerPort: 3000
                  protocol: TCP
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              readinessProbe:
                httpGet:
                  path: /
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 30
                timeoutSeconds: 1
              livenessProbe:
                successThreshold: 1
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 30
                timeoutSeconds: 5
              volumeMounts:
                #override config.js file
                - name: config
                  mountPath: "/usr/share/nginx/html/config.js"
                  subPath: config.js
          volumes:
            - name: config
              configMap:
                name: ${NAME}-${ZONE}-${COMPONENT}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      ports:
        - name: 3000-tcp
          protocol: TCP
          port: 80
          targetPort: 3000
      selector:
        deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      host: ${NAME}-${ZONE}-${COMPONENT}.${DOMAIN}
      port:
        targetPort: 3000-tcp
      to:
        kind: Service
        name: ${NAME}-${ZONE}-${COMPONENT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      scaleTargetRef:
        apiVersion: apps.openshift.io/v1
        kind: DeploymentConfig
        name: ${NAME}-${ZONE}-${COMPONENT}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 100
