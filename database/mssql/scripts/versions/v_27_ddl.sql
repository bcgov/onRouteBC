SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET NOCOUNT ON
GO

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO

IF @@ERROR <> 0 SET NOEXEC ON
GO

CREATE TABLE [permit].[ORBC_CFS_FILE_STATUS_TYPE](	
	[CFS_FILE_STATUS_TYPE] [varchar] (10) NOT NULL,
	[NAME] [varchar] (20) NOT NULL,
	[DESCRIPTION] [varchar] (65) NULL,
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NULL,
 CONSTRAINT [ORBC_CFS_FILE_STATUS_PK] PRIMARY KEY CLUSTERED 
(
	[CFS_FILE_STATUS_TYPE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_CFS_TRANSACTION_DETAIL](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[TRANSACTION_ID] [bigint] NOT NULL,
	[FILE_NAME] [nchar](30) NULL,
	[CFS_FILE_STATUS_TYPE] [varchar] (10) NOT NULL,
	[ERROR_MESSAGE] [nvarchar](3000) NULL,
	[PROCESSSING_DATE_TIME] [datetime] NULL,
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NULL,
 CONSTRAINT [PK_ORBC_CFS_DETAILS] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

INSERT [permit].[ORBC_CFS_FILE_STATUS_TYPE] ([CFS_FILE_STATUS_TYPE], [NAME], [DESCRIPTION], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'READY', N'Ready', N'Ready for sftp transfer.', N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_CFS_FILE_STATUS_TYPE] ([CFS_FILE_STATUS_TYPE], [NAME], [DESCRIPTION], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'SENT', N'Sent', N'Sent to sftp server', N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_CFS_FILE_STATUS_TYPE] ([CFS_FILE_STATUS_TYPE], [NAME], [DESCRIPTION], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'ACK', N'Acknowledged', N'Acknowledgement received from sftp server. Waiting for esponse.', N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_CFS_FILE_STATUS_TYPE] ([CFS_FILE_STATUS_TYPE], [NAME], [DESCRIPTION], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'SUCCESS', N'Response received', N'Successfully processed by sftp server', N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_CFS_FILE_STATUS_TYPE] ([CFS_FILE_STATUS_TYPE], [NAME], [DESCRIPTION], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'ERROR', N'Error', N'Error Received from sftp server', N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
GO

ALTER TABLE [permit].[ORBC_CFS_TRANSACTION_DETAIL] ADD  CONSTRAINT [ORBC_CFS_TRANSACTION_DETAIL_DB_CREATE_USERID_DEF]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_CFS_TRANSACTION_DETAIL] ADD  CONSTRAINT [ORBC_CFS_TRANSACTION_DETAIL_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_CFS_TRANSACTION_DETAIL] ADD  CONSTRAINT [ORBC_CFS_TRANSACTION_DETAIL_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_CFS_TRANSACTION_DETAIL] ADD  CONSTRAINT [ORBC_CFS_TRANSACTION_DETAIL_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
GO
ALTER TABLE [permit].[ORBC_CFS_FILE_STATUS_TYPE] ADD  CONSTRAINT [ORBC_CFS_FILE_STATUS_TYPE_DB_CREATE_USERID_DEF]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_CFS_FILE_STATUS_TYPE] ADD  CONSTRAINT [ORBC_CFS_FILE_STATUS_TYPE_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_CFS_FILE_STATUS_TYPE] ADD  CONSTRAINT [ORBC_CFS_FILE_STATUS_TYPE_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_CFS_FILE_STATUS_TYPE] ADD  CONSTRAINT [ORBC_CFS_FILE_STATUS_TYPE_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
GO

ALTER TABLE [permit].[ORBC_CFS_TRANSACTION_DETAIL]  WITH CHECK ADD  CONSTRAINT [ORBC_CFS_DETAILS_TRANSACTION_ID_FK] FOREIGN KEY([TRANSACTION_ID])
REFERENCES [permit].[ORBC_TRANSACTION] ([TRANSACTION_ID])
GO

ALTER TABLE [permit].[ORBC_CFS_TRANSACTION_DETAIL]  WITH CHECK ADD  CONSTRAINT [ORBC_CFS_TRANSACTION_DETAIL_FILE_STATUS_FK] FOREIGN KEY([CFS_FILE_STATUS_TYPE])
REFERENCES [permit].[ORBC_CFS_FILE_STATUS_TYPE] ([CFS_FILE_STATUS_TYPE])
GO

IF @@ERROR <> 0 SET NOEXEC ON
GO

DECLARE @VersionDescription VARCHAR(255)
SET @VersionDescription = 'Create Table - ORBC_CFS_TRANSACTION_DETAIL'

INSERT [dbo].[ORBC_SYS_VERSION] ([VERSION_ID], [DESCRIPTION], [UPDATE_SCRIPT], [REVERT_SCRIPT], [RELEASE_DATE]) VALUES (27, @VersionDescription, '$(UPDATE_SCRIPT)', '$(REVERT_SCRIPT)', getutcdate())
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
