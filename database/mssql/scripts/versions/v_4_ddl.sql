CREATE SCHEMA [permit]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET NOCOUNT ON
GO

CREATE TABLE [permit].[ORBC_PERMIT](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[ORIGINAL_ID] [bigint] NULL,
	[COMPANY_ID] [int] NULL,
	[PERMIT_TYPE] [varchar](10) NULL,
	[PERMIT_APPROVAL_SOURCE_TYPE] [varchar](8) NULL,
	[PERMIT_ISSUED_BY_TYPE] [varchar](15) NULL,
	[ISSUER_USER_GUID] [char](32) NULL,
	[PERMIT_APPLICATION_ORIGIN_TYPE] [varchar](8) NULL,
	[APPLICATION_NUMBER] [varchar](19) NULL,
	[PERMIT_NUMBER] [varchar](19) NULL,
	[TPS_PERMIT_NUMBER] [nvarchar](11) NULL,
	[REVISION] [tinyint] NULL,
	[PREVIOUS_REV_ID] [bigint] NULL,
	[OWNER_USER_GUID] [char](32) NULL,
	[PERMIT_STATUS_TYPE] [varchar](20) NULL,
	[PERMIT_ISSUE_DATE_TIME] [datetime2](7) NULL,
	[DOCUMENT_ID] [varchar](10) NULL,
	[COMMENT] [nvarchar](3000),
	[APP_CREATE_TIMESTAMP] [datetime2](7) DEFAULT (getutcdate()),
	[APP_CREATE_USERID] [nvarchar](30) DEFAULT (user_name()),
	[APP_CREATE_USER_GUID] [char](32) NULL,
	[APP_CREATE_USER_DIRECTORY] [nvarchar](30) DEFAULT (user_name()),
	[APP_LAST_UPDATE_TIMESTAMP] [datetime2](7) DEFAULT (getutcdate()),
	[APP_LAST_UPDATE_USERID] [nvarchar](30) DEFAULT (user_name()),
	[APP_LAST_UPDATE_USER_GUID] [char](32) NULL,
	[APP_LAST_UPDATE_USER_DIRECTORY] [nvarchar](30) DEFAULT (user_name()),
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_PERMIT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_PERMIT_COMMENTS](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[PERMIT_ID] [bigint] NOT NULL,
	[COMMENT] [nvarchar](500) NULL,
	[INTERNAL_ONLY] [bit] NOT NULL,
	[USER_GUID] [char](32) NULL,
	[COMMENT_DATE] [datetime2](7) NULL,
	[APP_CREATE_TIMESTAMP] [datetime2](7) DEFAULT (getutcdate()),
	[APP_CREATE_USERID] [nvarchar](30) DEFAULT (user_name()),
	[APP_CREATE_USER_GUID] [char](32) NULL,
	[APP_CREATE_USER_DIRECTORY] [nvarchar](30) DEFAULT (user_name()),
	[APP_LAST_UPDATE_TIMESTAMP] [datetime2](7) DEFAULT (getutcdate()),
	[APP_LAST_UPDATE_USERID] [nvarchar](30) DEFAULT (user_name()),
	[APP_LAST_UPDATE_USER_GUID] [char](32) NULL,
	[APP_LAST_UPDATE_USER_DIRECTORY] [nvarchar](30) DEFAULT (user_name()),
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_PERMIT_COMMENTS] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_PERMIT_DATA](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[PERMIT_ID] [bigint] NULL,
	[PERMIT_DATA] [nvarchar](4000) NULL,
	[START_DATE]  AS (json_value([PERMIT_DATA],'$.startDate')),
	[EXPIRY_DATE]  AS (json_value([PERMIT_DATA],'$.expiryDate')),
	[APP_CREATE_TIMESTAMP] [datetime2](7) DEFAULT (getutcdate()),
	[APP_CREATE_USERID] [nvarchar](30) DEFAULT (user_name()),
	[APP_CREATE_USER_GUID] [char](32) NULL,
	[APP_CREATE_USER_DIRECTORY] [nvarchar](30) DEFAULT (user_name()),
	[APP_LAST_UPDATE_TIMESTAMP] [datetime2](7) DEFAULT (getutcdate()),
	[APP_LAST_UPDATE_USERID] [nvarchar](30) DEFAULT (user_name()),
	[APP_LAST_UPDATE_USER_GUID] [char](32) NULL,
	[APP_LAST_UPDATE_USER_DIRECTORY] [nvarchar](30) DEFAULT (user_name()),
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_PERMIT_DATA] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_PERMIT_STATE](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[PERMIT_ID] [bigint] NULL,
	[PERMIT_STATUS_TYPE] [varchar](20) NULL,
	[STATE_CHANGE_DATE] [datetime2](7) NULL,
	[USER_GUID] [char](32) NULL,
	[APP_CREATE_TIMESTAMP] [datetime2](7) DEFAULT (getutcdate()),
	[APP_CREATE_USERID] [nvarchar](30) DEFAULT (user_name()),
	[APP_CREATE_USER_GUID] [char](32) NULL,
	[APP_CREATE_USER_DIRECTORY] [nvarchar](30) DEFAULT (user_name()),
	[APP_LAST_UPDATE_TIMESTAMP] [datetime2](7) DEFAULT (getutcdate()),
	[APP_LAST_UPDATE_USERID] [nvarchar](30) DEFAULT (user_name()),
	[APP_LAST_UPDATE_USER_GUID] [char](32) NULL,
	[APP_LAST_UPDATE_USER_DIRECTORY] [nvarchar](30) DEFAULT (user_name()),
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_PERMIT_STATE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_PERMIT_APPLICATION_ORIGIN_TYPE](
	[PERMIT_APPLICATION_ORIGIN_TYPE] [varchar](8) NOT NULL,
	[DESCRIPTION] [nvarchar](50) NULL,
	[CODE] [tinyint] NOT NULL,
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_VT_PERMIT_ORIGIN] PRIMARY KEY CLUSTERED 
(
	[PERMIT_APPLICATION_ORIGIN_TYPE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE](
	[PERMIT_APPROVAL_SOURCE_TYPE] [varchar](8) NOT NULL,
	[DESCRIPTION] [nvarchar](50) NULL,
	[CODE] [tinyint] NOT NULL,
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_PERMIT_APPROVAL_SOURCE_TYPE] PRIMARY KEY CLUSTERED 
(
	[PERMIT_APPROVAL_SOURCE_TYPE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_PERMIT_ISSUED_BY_TYPE](
	[PERMIT_ISSUED_BY_TYPE] [varchar](15) NOT NULL,
	[DESCRIPTION] [nvarchar](50) NULL,
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_PERMIT_ISSUED_BY_TYPE] PRIMARY KEY CLUSTERED 
(
	[PERMIT_ISSUED_BY_TYPE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_PERMIT_STATUS_TYPE](
	[PERMIT_STATUS_TYPE] [varchar](20) NOT NULL,
	[NAME] [nvarchar](50) NULL,
	[DESCRIPTION] [nvarchar](250) NULL,
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_PERMIT_STATUS_TYPE] PRIMARY KEY CLUSTERED 
(
	[PERMIT_STATUS_TYPE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [permit].[ORBC_PERMIT_TYPE](
	[PERMIT_TYPE] [varchar](10) NOT NULL,
	[NAME] [nvarchar](60) NULL,
	[CONCURRENCY_CONTROL_NUMBER] [int] NULL,
	[DB_CREATE_USERID] [varchar](63) NOT NULL,
	[DB_CREATE_TIMESTAMP] [datetime2](7) NOT NULL,
	[DB_LAST_UPDATE_USERID] [varchar](63) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP] [datetime2](7) NOT NULL,
 CONSTRAINT [PK_ORBC_PERMIT_TYPE] PRIMARY KEY CLUSTERED 
(
	[PERMIT_TYPE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [permit].[ORBC_PERMIT] ADD  CONSTRAINT [DF_ORBC_PERMIT_REVISION]  DEFAULT ((0)) FOR [REVISION]
ALTER TABLE [permit].[ORBC_PERMIT] ADD  CONSTRAINT [DF_ORBC_PERMIT_PERMIT_STATUS_TYPE]  DEFAULT ('IN_PROGRESS') FOR [PERMIT_STATUS_TYPE]
ALTER TABLE [permit].[ORBC_PERMIT] ADD  CONSTRAINT [DF_ORBC_PERMIT_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT] ADD  CONSTRAINT [DF_ORBC_PERMIT_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT] ADD  CONSTRAINT [DF_ORBC_PERMIT_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT] ADD  CONSTRAINT [DF_ORBC_PERMIT_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_COMMENTS] ADD  CONSTRAINT [DF_ORBC_PERMIT_COMMENTS_INTERNAL_ONLY]  DEFAULT ((1)) FOR [INTERNAL_ONLY]
ALTER TABLE [permit].[ORBC_PERMIT_COMMENTS] ADD  CONSTRAINT [DF_ORBC_PERMIT_COMMENTS_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_COMMENTS] ADD  CONSTRAINT [DF_ORBC_PERMIT_COMMENTS_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_COMMENTS] ADD  CONSTRAINT [DF_ORBC_PERMIT_COMMENTS_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_COMMENTS] ADD  CONSTRAINT [DF_ORBC_PERMIT_COMMENTS_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_DATA] ADD  CONSTRAINT [DF_ORBC_PERMIT_DATA_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_DATA] ADD  CONSTRAINT [DF_ORBC_PERMIT_DATA_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_DATA] ADD  CONSTRAINT [DF_ORBC_PERMIT_DATA_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_DATA] ADD  CONSTRAINT [DF_ORBC_PERMIT_DATA_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_STATE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATE_STATE_CHANGE_DATE]  DEFAULT (getutcdate()) FOR [STATE_CHANGE_DATE]
ALTER TABLE [permit].[ORBC_PERMIT_STATE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATE_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_STATE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATE_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_STATE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATE_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_STATE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATE_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_APPLICATION_ORIGIN_TYPE] ADD  CONSTRAINT [DF_ORBC_VT_PERMIT_ORIGIN_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_APPLICATION_ORIGIN_TYPE] ADD  CONSTRAINT [DF_ORBC_VT_PERMIT_ORIGIN_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_APPLICATION_ORIGIN_TYPE] ADD  CONSTRAINT [DF_ORBC_VT_PERMIT_ORIGIN_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_APPLICATION_ORIGIN_TYPE] ADD  CONSTRAINT [DF_ORBC_VT_PERMIT_ORIGIN_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_APPROVAL_SOURCE_TYPE_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_APPROVAL_SOURCE_TYPE_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_APPROVAL_SOURCE_TYPE_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_APPROVAL_SOURCE_TYPE_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_ISSUED_BY_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_ISSUED_BY_TYPE_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_ISSUED_BY_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_ISSUED_BY_TYPE_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_ISSUED_BY_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_ISSUED_BY_TYPE_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_ISSUED_BY_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_ISSUED_BY_TYPE_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_STATUS_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATUS_TYPE_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_STATUS_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATUS_TYPE_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_STATUS_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATUS_TYPE_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_STATUS_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_STATUS_TYPE_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_TYPE_DB_CREATE_USERID]  DEFAULT (user_name()) FOR [DB_CREATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_TYPE_DB_CREATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_TYPE_DB_LAST_UPDATE_USERID]  DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
ALTER TABLE [permit].[ORBC_PERMIT_TYPE] ADD  CONSTRAINT [DF_ORBC_PERMIT_TYPE_DB_LAST_UPDATE_TIMESTAMP]  DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
ALTER TABLE [permit].[ORBC_PERMIT]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_PARENT_PERMIT] FOREIGN KEY([PREVIOUS_REV_ID])
REFERENCES [permit].[ORBC_PERMIT] ([ID])
ALTER TABLE [permit].[ORBC_PERMIT] CHECK CONSTRAINT [FK_ORBC_PERMIT_PARENT_PERMIT]
ALTER TABLE [permit].[ORBC_PERMIT]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_PERMIT_APPLICATION_ORIGIN] FOREIGN KEY([PERMIT_APPLICATION_ORIGIN_TYPE])
REFERENCES [permit].[ORBC_PERMIT_APPLICATION_ORIGIN_TYPE] ([PERMIT_APPLICATION_ORIGIN_TYPE])
ALTER TABLE [permit].[ORBC_PERMIT] CHECK CONSTRAINT [FK_ORBC_PERMIT_PERMIT_APPLICATION_ORIGIN]
ALTER TABLE [permit].[ORBC_PERMIT]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_PERMIT_APPROVAL_SOURCE] FOREIGN KEY([PERMIT_APPROVAL_SOURCE_TYPE])
REFERENCES [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE] ([PERMIT_APPROVAL_SOURCE_TYPE])
ALTER TABLE [permit].[ORBC_PERMIT]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_PERMIT_ISSUED_BY] FOREIGN KEY([PERMIT_ISSUED_BY_TYPE])
REFERENCES [permit].[ORBC_PERMIT_ISSUED_BY_TYPE] ([PERMIT_ISSUED_BY_TYPE])
ALTER TABLE [permit].[ORBC_PERMIT] CHECK CONSTRAINT [FK_ORBC_PERMIT_PERMIT_APPROVAL_SOURCE]
ALTER TABLE [permit].[ORBC_PERMIT]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_PERMIT_TYPE] FOREIGN KEY([PERMIT_TYPE])
REFERENCES [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE])
ALTER TABLE [permit].[ORBC_PERMIT] CHECK CONSTRAINT [FK_ORBC_PERMIT_PERMIT_TYPE]
ALTER TABLE [permit].[ORBC_PERMIT_DATA]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_ID] FOREIGN KEY([PERMIT_ID])
REFERENCES [permit].[ORBC_PERMIT] ([ID])
ALTER TABLE [permit].[ORBC_PERMIT_DATA] CHECK CONSTRAINT [FK_ORBC_PERMIT_ID]
ALTER TABLE [permit].[ORBC_PERMIT_COMMENTS]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_COMMENTS_PERMIT] FOREIGN KEY([PERMIT_ID])
REFERENCES [permit].[ORBC_PERMIT] ([ID])
ALTER TABLE [permit].[ORBC_PERMIT_COMMENTS] CHECK CONSTRAINT [FK_ORBC_PERMIT_COMMENTS_PERMIT]
ALTER TABLE [permit].[ORBC_PERMIT_STATE]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_STATE_PERMIT] FOREIGN KEY([PERMIT_ID])
REFERENCES [permit].[ORBC_PERMIT] ([ID])
ALTER TABLE [permit].[ORBC_PERMIT_STATE] CHECK CONSTRAINT [FK_ORBC_PERMIT_STATE_PERMIT]
ALTER TABLE [permit].[ORBC_PERMIT_STATE]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_STATE_PERMIT_STATUS] FOREIGN KEY([PERMIT_STATUS_TYPE])
REFERENCES [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE])
ALTER TABLE [permit].[ORBC_PERMIT_STATE] CHECK CONSTRAINT [FK_ORBC_PERMIT_STATE_PERMIT_STATUS]
ALTER TABLE [permit].[ORBC_PERMIT]  WITH CHECK ADD  CONSTRAINT [FK_ORBC_PERMIT_PERMIT_STATUS_TYPE] FOREIGN KEY([PERMIT_STATUS_TYPE])
REFERENCES [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE])
ALTER TABLE [permit].[ORBC_PERMIT] CHECK CONSTRAINT [FK_ORBC_PERMIT_PERMIT_STATUS_TYPE]
GO

INSERT [permit].[ORBC_PERMIT_APPLICATION_ORIGIN_TYPE] ([PERMIT_APPLICATION_ORIGIN_TYPE], [DESCRIPTION], [CODE], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'ONLINE', N'Created Online', 2, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_APPLICATION_ORIGIN_TYPE] ([PERMIT_APPLICATION_ORIGIN_TYPE], [DESCRIPTION], [CODE], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'PPC', N'Created by PPC', 1, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE] ([PERMIT_APPROVAL_SOURCE_TYPE], [DESCRIPTION], [CODE], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'AUTO', N'Auto Approved Online by Carrier', 2, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE] ([PERMIT_APPROVAL_SOURCE_TYPE], [DESCRIPTION], [CODE], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'PPC', N'Approved by PPC', 1, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_APPROVAL_SOURCE_TYPE] ([PERMIT_APPROVAL_SOURCE_TYPE], [DESCRIPTION], [CODE], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'TPS', N'Imported from TPS', 0, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_ISSUED_BY_TYPE] ([PERMIT_ISSUED_BY_TYPE], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'SELF_ISSUED', N'Issued by Self', NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_ISSUED_BY_TYPE] ([PERMIT_ISSUED_BY_TYPE], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'PPC', N'Issued by PPC', NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'APPROVED', N'Approved', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'AUTO_APPROVED', N'Auto Approved', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'CANCELLED', N'Cancelled', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'IN_PROGRESS', N'In Progress', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'ISSUED', N'Issued', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'REJECTED', N'Rejected', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'REVOKED', N'Revoked', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'SUPERSEDED', N'Superseded', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'UNDER_REVIEW', N'Under Review', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'VOIDED', N'Voided', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'WAITING_APPROVAL', N'Waiting Approval', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'WAITING_PAYMENT', N'Waiting Payment', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_STATUS_TYPE] ([PERMIT_STATUS_TYPE], [NAME], [DESCRIPTION], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'PAYMENT_COMPLETE', N'Waiting Payment', NULL, NULL, N'dbo', GETUTCDATE(), N'dbo', GETUTCDATE())
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'EPTOP', N'Extra-Provincial Temporary Operating', NULL, N'dbo', CAST(N'2023-08-08T21:30:23.6400000' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:23.6400000' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'HC', N'Highway Crossing', NULL, N'dbo', CAST(N'2023-08-08T21:30:19.8133333' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:19.8133333' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'LCV', N'Long Combination Vehicle', NULL, N'dbo', CAST(N'2023-08-08T21:29:58.5933333' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:29:58.5933333' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'MFP', N'Motive Fuel User', NULL, N'dbo', CAST(N'2023-08-08T21:30:46.9433333' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:46.9433333' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRQBS', N'Quarterly Non Resident Reg. / Ins. - Bus', NULL, N'dbo', CAST(N'2023-08-08T21:30:52.5533333' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:52.5533333' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRQCL', N'Non Resident Quarterly Conditional License', NULL, N'dbo', CAST(N'2023-08-08T21:31:35.2800000' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:31:35.2800000' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRQCV', N'Quarterly Non Resident Reg. / Ins. - Comm Vehicle', NULL, N'dbo', CAST(N'2023-08-08T21:30:43.4133333' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:43.4133333' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRQFT', N'Non Resident Quarterly Farm Tractor', NULL, N'dbo', CAST(N'2023-08-08T21:30:33.6366667' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:33.6366667' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRQFV', N'Quarterly Non Resident Reg. / Ins. - Farm Vehicle', NULL, N'dbo', CAST(N'2023-08-08T21:30:59.7500000' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:59.7500000' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRQXP', N'Non Resident Quarterly X Plated', NULL, N'dbo', CAST(N'2023-08-08T21:31:22.7833333' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:31:22.7833333' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRSBS', N'Single Trip Non-Resident Registration / Insurance -Buses', NULL, N'dbo', CAST(N'2023-08-08T21:30:54.8166667' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:54.8166667' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRSCL', N'Non Resident Single Trip Conditional License', NULL, N'dbo', CAST(N'2023-08-08T21:31:26.5666667' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:31:26.5666667' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRSCV', N'Single Trip Non-Resident Reg. / Ins. - Commercial Vehicle', NULL, N'dbo', CAST(N'2023-08-08T21:30:37.7833333' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:37.7833333' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRSFT', N'Non Resident Farm Tractor Single Trip', NULL, N'dbo', CAST(N'2023-08-08T21:30:28.4766667' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:28.4766667' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRSFV', N'Single Trip Non Resident Reg. / Ins. - Farm Vehicle', NULL, N'dbo', CAST(N'2023-08-08T21:31:07.1566667' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:31:07.1566667' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'NRSXP', N'Non Resident Single Trip X Plated Vehicle', NULL, N'dbo', CAST(N'2023-08-08T21:31:20.0300000' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:31:20.0300000' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'RIG', N'Rig Move', NULL, N'dbo', CAST(N'2023-08-08T21:31:10.8766667' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:31:10.8766667' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'STOS', N'Single Trip Oversize', NULL, N'dbo', CAST(N'2023-08-08T19:54:54.9633333' AS DateTime2), N'dbo', CAST(N'2023-08-08T19:54:54.9633333' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'STOW', N'Single Trip Over Weight', NULL, N'dbo', CAST(N'2023-08-08T21:31:13.9966667' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:31:13.9966667' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'STWS', N'Single Trip Overweight Oversize', NULL, N'dbo', CAST(N'2023-08-08T21:30:50.2200000' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:50.2200000' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'TRAX', N'Term Axle Overweight', NULL, N'dbo', CAST(N'2023-08-08T21:29:54.3600000' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:29:54.3600000' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'TROS', N'Term Oversize', NULL, N'dbo', CAST(N'2023-08-08T19:54:54.9666667' AS DateTime2), N'dbo', CAST(N'2023-08-08T19:54:54.9666667' AS DateTime2))
INSERT [permit].[ORBC_PERMIT_TYPE] ([PERMIT_TYPE], [NAME], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_USERID], [DB_CREATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [DB_LAST_UPDATE_TIMESTAMP]) VALUES (N'TROW', N'Term Overweight', NULL, N'dbo', CAST(N'2023-08-08T21:30:06.2533333' AS DateTime2), N'dbo', CAST(N'2023-08-08T21:30:06.2533333' AS DateTime2))
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Surrogate primary key for the permit metadata record' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the original permit or application without any revisions. All subsequent revisions of that original permit will share the same ORIGINAL_ID value making history tracking straightforward.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'ORIGINAL_ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to the ORBC_COMPANY table, represents the company requesting the permit' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'COMPANY_ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to the permit type table, represents the type of permit this record refers to' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'PERMIT_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to the permit approval source table, identifying which system gave final approval to the permit' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'PERMIT_APPROVAL_SOURCE_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to the permit issued by table, identifying which user category issued the permit' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'PERMIT_ISSUED_BY_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to the permit application source table, identifying the system that the permit application originated from' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'PERMIT_APPLICATION_ORIGIN_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique formatted permit application number' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'APPLICATION_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique formatted permit number, recorded once the permit is approved and issued' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'PERMIT_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Original permit number for permits which have been imported from TPS, null otherwise' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'TPS_PERMIT_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Revision of the permit, begins with zero and increments by 1 for each subsequent revision' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'REVISION'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the previous permit revision metadata record, if this permit revision is greater than zero' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'PREVIOUS_REV_ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time when permit was issued' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'PERMIT_ISSUE_DATE_TIME'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the document/PDF that references the Document Management System (DMS)' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'DOCUMENT_ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Current status of the permit or permit application.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'PERMIT_STATUS_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Table recording fixed metadata for a permit application or issued permit' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Surrogate primary key for this comment record' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to related permit metadata record this comment is related to' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'PERMIT_ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Freeform text comment on the permit or permit application' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'COMMENT'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Whether this comment should be considered internal-only (not for public display). 1 = internal, 0 = not internal.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'INTERNAL_ONLY'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key relationship to the user table indicating the id of the user who recorded the comment' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'USER_GUID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the comment was recorded' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'COMMENT_DATE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Individual time-stamped comments related to an individual permit application' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_COMMENTS'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique ID of the permit data record and revision (each revision is its own ID)' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to the permit table identifying the permit record this data record is associated with' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'PERMIT_ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'JSON structured data representing the permit details' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'PERMIT_DATA'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Calculated column for the permit start date, pulled from the JSON PERMIT_DATA' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'START_DATE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Calculated column for the permit expiry date, pulled from the JSON PERMIT_DATA' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'EXPIRY_DATE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Table tracking the submitted permit data from the user input form' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_DATA'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Surrogate primary key for this permit state record' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to the permit metadata table that this state refers to' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'PERMIT_ID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to the permit status table' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'PERMIT_STATUS_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time that the state was changed' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'STATE_CHANGE_DATE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key relationship to the user table indicating the id of the user who effected the state change' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'USER_GUID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Table tracking all historic changes to the permit or application status or other variable properties' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for the application origin' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE', @level2type=N'COLUMN',@level2name=N'PERMIT_APPLICATION_ORIGIN_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Longer-form text description of the application origin' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE', @level2type=N'COLUMN',@level2name=N'DESCRIPTION'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Code used for the application origin in permit application number generation' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE', @level2type=N'COLUMN',@level2name=N'CODE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Definition of all available permit application origins' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPLICATION_ORIGIN_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for the permit approval source' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE', @level2type=N'COLUMN',@level2name=N'PERMIT_APPROVAL_SOURCE_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Longer-form text description of the permit approval source' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE', @level2type=N'COLUMN',@level2name=N'DESCRIPTION'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Code for the approval source used in permit number generation' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE', @level2type=N'COLUMN',@level2name=N'CODE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Definition of all possible sources of permit approvals' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_APPROVAL_SOURCE_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for the permit approval source' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_ISSUED_BY_TYPE', @level2type=N'COLUMN',@level2name=N'PERMIT_ISSUED_BY_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Longer-form text description of the permit approval source' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_ISSUED_BY_TYPE', @level2type=N'COLUMN',@level2name=N'DESCRIPTION'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_ISSUED_BY_TYPE', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_ISSUED_BY_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_ISSUED_BY_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_ISSUED_BY_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_ISSUED_BY_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Definition of all possible sources of permit approvals' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_ISSUED_BY_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique id of the permit status' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE', @level2type=N'COLUMN',@level2name=N'PERMIT_STATUS_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Friendly name of the permit status' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE', @level2type=N'COLUMN',@level2name=N'NAME'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Long description of the permit status' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE', @level2type=N'COLUMN',@level2name=N'DESCRIPTION'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Defines all possible status values a permit can be in' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_STATUS_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique ID of the permit type' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_TYPE', @level2type=N'COLUMN',@level2name=N'PERMIT_TYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Friendly name for the permit type' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_TYPE', @level2type=N'COLUMN',@level2name=N'NAME'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Application code is responsible for retrieving the row and then incrementing the value of the CONCURRENCY_CONTROL_NUMBER column by one prior to issuing an update. If this is done then the update will succeed, provided that the row was not updated by any other transactions in the period between the read and the update operations.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_TYPE', @level2type=N'COLUMN',@level2name=N'CONCURRENCY_CONTROL_NUMBER'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_TYPE', @level2type=N'COLUMN',@level2name=N'DB_CREATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user or proxy account that created or last updated the record.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_USERID'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the record was created or last updated.' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_TYPE', @level2type=N'COLUMN',@level2name=N'DB_LAST_UPDATE_TIMESTAMP'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Table enumerating all possible permit types' , @level0type=N'SCHEMA',@level0name=N'permit', @level1type=N'TABLE',@level1name=N'ORBC_PERMIT_TYPE'
GO

CREATE SEQUENCE [permit].[ORBC_PERMIT_NUMBER_SEQ] 
 AS [bigint]
 START WITH 10000
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 99999999
 CACHE 
GO



IF OBJECT_ID('permit.ORBC_PERMIT_ISSUED_PPC_USER_VW', 'view') IS NOT NULL
	DROP VIEW permit.ORBC_PERMIT_ISSUED_PPC_USER_VW;
GO

CREATE VIEW permit.ORBC_PERMIT_ISSUED_PPC_USER_VW
	WITH SCHEMABINDING
AS
SELECT permit.ISSUER_USER_GUID, COUNT_BIG(*) as count_user
FROM [permit].[ORBC_PERMIT] AS permit
WHERE permit.PERMIT_ISSUED_BY_TYPE = 'PPC'
GROUP BY permit.ISSUER_USER_GUID;
GO

--Create an index on the view.
CREATE UNIQUE CLUSTERED INDEX IDX_ORBC_PERMIT_ISSUED_PPC_USER_VW ON permit.ORBC_PERMIT_ISSUED_PPC_USER_VW (
	ISSUER_USER_GUID
	);
GO

DECLARE @VersionDescription VARCHAR(255)
SET @VersionDescription = 'Initial creation of entities for applying for and issuing permits'

INSERT [dbo].[ORBC_SYS_VERSION] ([VERSION_ID], [DESCRIPTION], [UPDATE_SCRIPT], [REVERT_SCRIPT], [RELEASE_DATE]) VALUES (4, @VersionDescription, '$(UPDATE_SCRIPT)', '$(REVERT_SCRIPT)', getutcdate())
