name: Deploy

on:
  workflow_call:
    # Inputs the workflow accepts.
    inputs:
      environment:
        description: 'Which environment to deploy to'
        default: 'staging'
        required: false
        type: string
      imagetag:
        description: 'Which image tag to use'
        default: 'test'
        required: false
        type: string
      penetration_test:
        description: 'If penetration test is required'
        default: false
        required: false
        type: string
      vault_zone:
        description: 'Which vault zone to use'
        default: 'dev'
        required: false
        type: string
    secrets:
      access_token:
        description: 'Server access token'
        required: true
      server:
        description: 'Server url to connect to'
        required: true
      vault_environment:
        description: 'Vault environment that is being used'
        required: true
      vault_token:
        description: 'Vault access token'
        required: true
jobs:
  deploy:
    name: Deployments
    environment: ${{inputs.zone}}
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        name: [init, backend/vehicles, backend/dms, frontend]
        include:
          - name: backend/vehicles
            file: backend/vehicles/openshift.deploy.yml
            overwrite: true
          - name: backend/dms
            file: backend/dms/openshift.deploy.yml
            overwrite: true            
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
          - name: init
            file: common/openshift.init.yml
            overwrite: false
    steps:
      - name: Import Secrets
        id: vault
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.developer.gov.bc.ca
          token: ${{ secrets.vault_token }}
          exportEnv: "false"
          namespace: platform-services
          secrets: |
            ${{vault.vault_environment}}/data/database-${{inputs.vault_zone}}   DATABASE_HOST             | VAULT_DATABASE_HOST;
            ${{vault.vault_environment}}/data/database-${{inputs.vault_zone}}   DATABASE_USER             | VAULT_DATABASE_USER;
            ${{vault.vault_environment}}/data/database-${{inputs.vault_zone}}   DATABASE_NAME             | VAULT_DATABASE_NAME;
            ${{vault.vault_environment}}/data/database-${{inputs.vault_zone}}   DATABASE_PASSWORD         | VAULT_DATABASE_PASSWORD;
            ${{vault.vault_environment}}/data/database-${{inputs.vault_zone}}   DATABASE_PORT             | VAULT_DATABASE_PORT;
            ${{vault.vault_environment}}/data/auth0-${{inputs.vault_zone}}      AUTH0_ISSUER_URL          | VAULT_AUTH0_ISSUER_URL;
            ${{vault.vault_environment}}/data/auth0-${{inputs.vault_zone}}      AUTH0_AUDIENCE            | VAULT_AUTH0_AUDIENCE;
            ${{vault.vault_environment}}/data/auth0-${{inputs.vault_zone}}      AUTH0_IGNORE_EXP          | VAULT_AUTH0_IGNORE_EXP;
            ${{vault.vault_environment}}/data/coms-${{inputs.vault_zone}}       BASICAUTH_PASSWORD        | VAULT_BASICAUTH_PASSWORD;
            ${{vault.vault_environment}}/data/coms-${{inputs.vault_zone}}       BASICAUTH_USERNAME        | VAULT_BASICAUTH_USERNAME;
            ${{vault.vault_environment}}/data/coms-${{inputs.vault_zone}}       COMS_URL                  | VAULT_COMS_URL;
            ${{vault.vault_environment}}/data/coms-${{inputs.vault_zone}}       COMS_PRESIGNED_URL_EXPIRY | VAULT_PRESIGNED_URL_EXPIRY;
            ${{vault.vault_environment}}/data/ches-${{inputs.vault_zone}}       CHES_CLIENT_ID            | VAULT_CHES_CLIENT_ID;
            ${{vault.vault_environment}}/data/ches-${{inputs.vault_zone}}       CHES_CLIENT_SECRET        | VAULT_CHES_CLIENT_SECRET;
            ${{vault.vault_environment}}/data/cdogs-${{inputs.vault_zone}}      CDOGS_CLIENT_ID           | VAULT_CDOGS_CLIENT_ID;
            ${{vault.vault_environment}}/data/cdogs-${{inputs.vault_zone}}      CDOGS_CLIENT_SECRET       | VAULT_CDOGS_CLIENT_SECRET;
            ${{vault.vault_environment}}/data/cdogs-${{inputs.vault_zone}}      CDOGS_TOKEN_URL           | VAULT_CDOGS_TOKEN_URL;
            ${{vault.vault_environment}}/data/cdogs-${{inputs.vault_zone}}      CDOGS_URL                 | VAULT_CDOGS_URL;
      
      - uses: bcgov-nr/action-deployer-openshift@v1.0.5
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{inputs.environmnet }}
          oc_server: ${{ secrets.server }}
          oc_token: ${{ secrets.access_token }}
          overwrite: ${{ matrix.overwrite }}
          parameters: 
            -p ZONE=${{inputs.zone}}
            -p NAME=${{ github.event.repository.name }} ${{ matrix.parameters }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:${{inputs.imagetag}}
            -p DATABASE_NAME=${{steps.vault.outputs.VAULT_DATABASE_NAME}}
            -p DATABASE_USER=${{steps.vault.outputs.VAULT_DATABASE_USER}}
            -p DATABASE_PASSWORD=${{steps.vault.outputs.VAULT_DATABASE_PASSWORD}}
            -p DATABASE_HOST=${{steps.vault.outputs.VAULT_DATABASE_HOST}}
            -p AUTH0_ISSUER_URL=${{steps.vault.outputs.VAULT_AUTH0_ISSUER_URL}}
            -p AUTH0_AUDIENCE=${{steps.vault.outputs.VAULT_AUTH0_AUDIENCE}}
            -p AUTH0_IGNORE_EXP=${{steps.vault.outputs.VAULT_AUTH0_IGNORE_EXP}}
            -p BASICAUTH_PASSWORD=${{steps.vault.outputs.VAULT_BASICAUTH_PASSWORD}}
            -p BASICAUTH_USERNAME=${{steps.vault.outputs.VAULT_BASICAUTH_USERNAME}}
            -p COMS_URL=${{steps.vault.outputs.VAULT_COMS_URL}}
            -p COMS_PRESIGNED_URL_EXPIRY=${{steps.vault.outputs.VAULT_PRESIGNED_URL_EXPIRY}}
            -p CHES_CLIENT_ID=${{steps.vault.outputs.VAULT_CHES_CLIENT_ID}}
            -p CHES_CLIENT_SECRET=${{steps.vault.outputs.VAULT_CHES_CLIENT_SECRET}}
            -p CDOGS_CLIENT_ID=${{steps.vault.outputs.VAULT_CDOGS_CLIENT_ID}}
            -p CDOGS_CLIENT_SECRET=${{steps.vault.outputs.VAULT_CDOGS_CLIENT_SECRET}}
            -p CDOGS_TOKEN_URL=${{steps.vault.outputs.VAULT_CDOGS_TOKEN_URL}}
            -p CDOGS_URL=${{steps.vault.outputs.VAULT_CDOGS_URL}}
            ${{ matrix.parameters }}
          penetration_test: false
