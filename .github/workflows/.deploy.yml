name: Deploy Workflow

on:
  workflow_call:
    inputs:
      ### Required
      target:
        description: 'PR number, test or prod.'
        required: true
        type: string

      ### Typical / recommended
      autoscaling:
        description: 'Autoscaling enabled or not for the deployments'
        required: false
        type: boolean
        default: true
      tag:
        description: 'Docker tag; e.g. PR number, tag, test or prod'
        required: false
        type: string
        default: ${{ github.event.number }}

      ### Usually a bad idea / not recommended
      directory:
        description: 'Chart directory.'
        default: 'charts/${{ github.event.repository.name }}'
        required: false
        type: string
      timeout-minutes:
        description: 'Timeout minutes'
        default: 10
        required: false
        type: number
      values:
        description: 'Values file.'
        default: 'values.yaml'
        required: false
        type: string

jobs:
  # https://github.com/bcgov-nr/action-deployer-openshift
  deploys:
    name: Helm
    environment: ${{ github.event.number || github.event.release.tag_name }}
    runs-on: ubuntu-22.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy
        working-directory: ${{ inputs.directory }}
        shell: bash
        run: |
          # Login to OpenShift (NOTE: project command is a safeguard)
          oc login --token=${{ secrets.oc_token }} --server=${{ vars.oc_server }}
          oc project ${{ vars.oc_namespace }}

          # Interrupt any previous jobs (status = pending-upgrade)
          PREVIOUS=$(helm status ${{ github.event.repository.name }}-${{ inputs.target }} -o json | jq .info.status || true)
          if [[ ${PREVIOUS} =~ pending ]]; then
            echo "Rollback triggered"
            helm rollback ${{ github.event.repository.name }}-${{ inputs.target }} || \
              helm uninstall ${{ github.event.repository.name }}-${{ inputs.target }}
          fi

          # Deploy Helm Chart
          helm dependency update
          helm upgrade \
            --set global.autoscaling=${{ inputs.autoscaling }} \
            --set-string global.repository=${{ github.repository }} \
            --set-string global.secrets.databasePassword=${{ secrets.DB_PASSWORD }} \
            --set-string global.tag="${{ inputs.target }}" \
            --set-string backend.containers[0].tag="${{ inputs.target }}" \
            --set-string backend.initContainers[0].tag="${{ inputs.target }}" \
            --set-string frontend.containers[0].tag="${{ inputs.target }}" \
            --install --wait --atomic ${{ github.event.repository.name }}-${{ inputs.target }} \
            --timeout ${{ inputs.timeout-minutes }}m \
            --values ${{ inputs.values }} .

          # Remove old build runs, build pods and deployment pods
          oc delete po --field-selector=status.phase==Succeeded
