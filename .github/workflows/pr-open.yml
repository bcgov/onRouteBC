name: PR

on:
  pull_request:
  merge_group:

concurrency:
  #  PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  pr-description-add:
    name: PR Description Add
    if: github.event_name == 'pull_request'
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    timeout-minutes: 1
    steps:
      - uses: bcgov-nr/action-pr-description-add@v1.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---

            Thanks for the PR!

            Deployments, as required, will be available below:
            - [Frontend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }})
            - [Vehicles](https://${{ env.PREFIX }}-vehicles.${{ env.DOMAIN }}/api)
            - [Dops](https://${{ env.PREFIX }}-dops.${{ env.DOMAIN }}/api)

            Please create PRs in draft mode.  Mark as ready to enable:
            - [Analysis Workflow](https://github.com/${{ github.repository }}/actions/workflows/analysis.yml)

            After merge, new images are promoted to:
            - [Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge.yml)

  # Find initial PR number (for merge queues)
  vars:
    name: Build and Deploy Vars
    outputs:
      tag: ${{ steps.deploys.outputs.tag }}
    runs-on: ubuntu-22.04
    steps:
      - name: Set Variables
        id: deploys
        run: |
          # Get PR number (different process for merge queue)
          if [ ${{ github.event_name }} == 'pull_request' ]
          then
            tag=${{ github.event.number }}
          else
            tag=$(echo ${{ github.event.merge_group.head_ref }} | grep -Eo "queue/main/pr-[0-9]+" | cut -d '-' -f2)
          fi

          echo "Summary ---"
          echo -e "\tTag (PR no): ${tag}"
          echo "tag=${tag}" >> $GITHUB_OUTPUT

  # https://github.com/bcgov-nr/action-builder-ghcr
  builds:
    name: Builds
    needs: [vars]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [dops, vehicles, frontend]
    timeout-minutes: 10
    steps:
      - uses: bcgov-nr/action-builder-ghcr@v2.0.0
        with:
          keep_versions: 50
          package: ${{ matrix.package }}
          tag: ${{ needs.vars.outputs.tag }}
          tag_fallback: latest
          triggers: ('${{ matrix.package }}/')

  # https://github.com/bcgov-nr/action-deployer-openshift
  deploys:
    name: Deploys
    needs: [builds, vars]
    uses: ./.github/workflows/.deploy.yml
    secrets: inherit
    with:
      autoscaling: false
      environment: dev
      release: ${{ needs.vars.outputs.tag }}
      tag: ${{ needs.vars.outputs.tag }}
      # triggers: ('database/' 'dops/' 'frontend/' 'vehicles/')
      vault_role: nonprod
