name: Pull Request

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-greeting:
    name: PR Greeting
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: PR Greeting
        uses: bcgov-nr/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---

            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [Backend - Vehicles](https://${{ env.PREFIX }}-backend-vehicles.${{ env.DOMAIN }}/) available
            [Frontend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}/) available

            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

  builds:
    name: Builds
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [backend/vehicles, frontend]
        include:
          - package: backend/vehicles
            triggers: ('backend/vehicles/')
          - package: frontend
            triggers: ('frontend/')
    steps:
      - uses: actions/checkout@v3
      - uses: bcgov-nr/action-builder-ghcr@v0.0.2
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ${{ matrix.triggers }}

  deploys:
    name: Deploys
    needs:
      - builds
    environment: dev
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [backend/vehicles, init, frontend]
        include:
          - name: backend/vehicles
            file: backend/vehicles/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
          - name: init
            file: common/openshift.init.yml
            overwrite: false
    steps:
      - uses: actions/github-script@v6
          with:
            script: |
              const deployments = await github.rest.repos.listDeployments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha
              });
              await Promise.all(
                deployments.data.map(async (deployment) => {
                  await github.rest.repos.createDeploymentStatus({ 
                    owner: context.repo.owner, 
                    repo: context.repo.repo, 
                    deployment_id: deployment.id, 
                    state: 'inactive' 
                  });
                  console.log(deployment);
                  return;
                })
              );
