name: Merge

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
      - 'common/graphics/**'
  workflow_dispatch:
    inputs:
      pr:
        description: "PR num of image to deploy"
        required: false
        type: string


concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  vars:
    name: Set Variables
    outputs:
      pr: ${{ steps.pr.outputs.pr }}
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      # Get PR number for squash merges to main
      - name: Get PR Number From Event
        if: ${{ github.event_name == 'push' }}
        id: pr_no
        uses: bcgov/action-get-pr@v0.0.1
      - name: PR Number
        id: pr
        run: echo pr=${{ steps.pr_no.outputs.pr || inputs.pr}} >> $GITHUB_OUTPUT
  
  build-version:
    name: Calculate build version
    outputs:
      dops:       ${{ steps.build_ver.outputs.dops }}
      vehicles:   ${{ steps.build_ver.outputs.vehicles }}
      frontend:   ${{ steps.build_ver.outputs.frontend }}
      scheduler:  ${{ steps.build_ver.outputs.scheduler }}
      policy:     ${{ steps.build_ver.outputs.policy }}
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [dops, vehicles, frontend, scheduler, policy]
    timeout-minutes: 2
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ matrix.package }}
          sparse-checkout-cone-mode: false

      - name: Get Next Version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          fallbackTag: 'v0.0.0'
      
      - name: Echo build version into GITHUB_OUTPUT
        id: build_ver
        run: |
          echo "${{matrix.package}}=${{ steps.semver.outputs.next }}" >> $GITHUB_OUTPUT 

  deploys-test:
    name: Deploys (Test)
    needs: [vars]
    uses: ./.github/workflows/test.yml
    secrets: inherit
    with:
      tag: ${{ needs.vars.outputs.pr }}
      params: |
        --set-string global.env.pr_num='${{ needs.vars.outputs.pr }}' \
        --set-string global.env.release_num='${{ needs.vars.outputs.pr }}' \

  promote-images-test:
    name: Promote Images - Test
    needs: [deploys-test, vars]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [dops, vehicles, frontend, scheduler, policy]
    timeout-minutes: 2
    steps:
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: ${{ needs.vars.outputs.pr }}
          tags: test  #Promote images AFTER successful deploy
