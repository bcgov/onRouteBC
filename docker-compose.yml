services:
  sftp:
    container_name: sftp
    image: atmoz/sftp
    volumes:
        - C:\Users\chauh\.ssh\share:/home/f3535t/data
        - C:\Repository\keys\cfs_key.pub:/home/f3535t/.ssh/keys/cfs_key.pub:ro
    ports:
        - "22:22"
    command: f3535t::1001
  sql-server-db:
    container_name: sql-server-db
    build:
      context: ./database/mssql
      dockerfile: Dockerfile
    environment:
      MSSQL_HOST: sql-server-db
      MSSQL_PORT: ${MSSQL_PORT}
      MSSQL_DB: ${MSSQL_DB}
      MSSQL_SA_USER: ${MSSQL_SA_USER}
      # Ensure there are no dollar sign ($) characters in the password.
      # Due to the nature of the docker-mssql and how we are loading the
      # schema with bash and variable substitution any passwords with
      # $ will not work and the database will not start.
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_ENCRYPT: ${MSSQL_ENCRYPT}
      MSSQL_RUN_TESTS: ${MSSQL_RUN_TESTS}
      SAMPLE_PENDING_IDIR_USERS: ${SAMPLE_PENDING_IDIR_USERS}
      MSSQL_LOAD_SAMPLE_DATA: ${MSSQL_LOAD_SAMPLE_DATA}
      MSSQL_MOTI_HOST: ${MSSQL_MOTI_HOST}
      MSSQL_MOTI_DB: ${MSSQL_MOTI_DB}
      MSSQL_MOTI_USER: ${MSSQL_MOTI_USER}
      # See note about dollar signs in passwords, above.
      MSSQL_MOTI_PASSWORD: ${MSSQL_MOTI_PASSWORD}
      SCRIPT_DIR: /usr/config
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S $$MSSQL_HOST -U $$MSSQL_SA_USER -P $$MSSQL_SA_PASSWORD -Q "USE $$MSSQL_DB" | grep "Changed database context to '$$MSSQL_DB'"
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 10s
    hostname: sql-server-db
    ports:
      - "1433:1433"
    volumes:
      - /sql_data

  vehicles-api:
    container_name: vehicles-api
    build:
      context: ./vehicles/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      VEHICLES_API_LOG_LEVEL: ${VEHICLES_API_LOG_LEVEL}
      VEHICLES_API_TYPEORM_LOG_LEVEL: ${VEHICLES_API_TYPEORM_LOG_LEVEL}
      VEHICLES_API_MAX_QUERY_EXECUTION_TIME_MS: ${VEHICLES_API_MAX_QUERY_EXECUTION_TIME_MS}
      DB_TYPE: ${DB_TYPE}
      MSSQL_HOST: sql-server-db
      MSSQL_PORT: ${MSSQL_PORT}
      MSSQL_DB: ${MSSQL_DB}
      MSSQL_SA_USER: ${MSSQL_SA_USER}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_ENCRYPT: ${MSSQL_ENCRYPT}
      KEYCLOAK_ISSUER_URL: ${KEYCLOAK_ISSUER_URL}
      KEYCLOAK_AUDIENCE: ${KEYCLOAK_AUDIENCE}
      KEYCLOAK_IGNORE_EXP: ${KEYCLOAK_IGNORE_EXP}
      ACCESS_API_URL: "http://vehicles-api:5000"
      DOPS_URL: "http://dops-api:5001"
      FRONTEND_URL: "http://frontend:3000"
      PAYBC_API_KEY: ${PAYBC_API_KEY}
      PAYBC_REF_NUMBER: ${PAYBC_REF_NUMBER}
      PAYBC_BASE_URL: ${PAYBC_BASE_URL}
      PAYBC_REDIRECT: ${PAYBC_REDIRECT}
      GL_CODE: ${GL_CODE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      sql-server-db:
        condition: service_healthy
    hostname: vehicles-api
    links:
      - sql-server-db
      - dops-api
    ports:
      - "5000:5000"

  dops-api:
    container_name: dops-api
    build:
      context: ./dops/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      DOPS_API_LOG_LEVEL: ${DOPS_API_LOG_LEVEL}
      DOPS_API_TYPEORM_LOG_LEVEL: ${DOPS_API_TYPEORM_LOG_LEVEL}
      DOPS_API_MAX_QUERY_EXECUTION_TIME_MS: ${DOPS_API_MAX_QUERY_EXECUTION_TIME_MS}
      DB_TYPE: ${DB_TYPE}
      MSSQL_HOST: sql-server-db
      MSSQL_PORT: ${MSSQL_PORT}
      MSSQL_DB: ${MSSQL_DB}
      MSSQL_SA_USER: ${MSSQL_SA_USER}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_ENCRYPT: ${MSSQL_ENCRYPT}
      KEYCLOAK_ISSUER_URL: ${KEYCLOAK_ISSUER_URL}
      KEYCLOAK_AUDIENCE: ${KEYCLOAK_AUDIENCE}
      KEYCLOAK_IGNORE_EXP: ${KEYCLOAK_IGNORE_EXP}
      DOPS_CVSE_FORMS_CACHE_TTL_MS: ${DOPS_CVSE_FORMS_CACHE_TTL_MS}
      OCIO_S3_ACCESSKEYID: ${OCIO_S3_ACCESSKEYID}
      OCIO_S3_BUCKET: ${OCIO_S3_BUCKET}
      OCIO_S3_PRESIGNED_URL_EXPIRY: ${OCIO_S3_PRESIGNED_URL_EXPIRY}
      OCIO_S3_ENDPOINT: ${OCIO_S3_ENDPOINT}
      OCIO_S3_KEY: ${OCIO_S3_KEY}
      OCIO_S3_SECRETACCESSKEY: ${OCIO_S3_SECRETACCESSKEY}
      CHES_TOKEN_URL: ${CHES_TOKEN_URL}
      CHES_CLIENT_ID: ${CHES_CLIENT_ID}
      CHES_CLIENT_SECRET: ${CHES_CLIENT_SECRET}
      CHES_URL: ${CHES_URL}      
      CDOGS_TOKEN_URL: ${CDOGS_TOKEN_URL}
      CDOGS_CLIENT_ID: ${CDOGS_CLIENT_ID}
      CDOGS_CLIENT_SECRET: ${CDOGS_CLIENT_SECRET}
      CDOGS_URL: ${CDOGS_URL}
      ACCESS_API_URL: "http://vehicles-api:5000"
      DOPS_URL: "http://dops-api:5001"
      FRONTEND_URL: "http://frontend:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      sql-server-db:
        condition: service_healthy
    hostname: dops-api
    links:
      - sql-server-db
    ports:
      - "5001:5001"

  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
      args:
        VITE_DEPLOY_ENVIRONMENT: ${VITE_DEPLOY_ENVIRONMENT}
        VITE_API_VEHICLE_URL: ${VITE_API_VEHICLE_URL}
        VITE_KEYCLOAK_ISSUER_URL: ${VITE_KEYCLOAK_ISSUER_URL}
        VITE_KEYCLOAK_AUDIENCE: ${VITE_KEYCLOAK_AUDIENCE}
        VITE_SITEMINDER_LOG_OFF_URL: ${VITE_SITEMINDER_LOG_OFF_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: frontend
    links:
      - vehicles-api
      - dops-api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:z
      - /app/node_modules

  scheduler:
    container_name: scheduler
    build:
      context: ./scheduler/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      TPS_API_LOG_LEVEL: ${TPS_API_LOG_LEVEL}
      TPS_API_TYPEORM_LOG_LEVEL: ${TPS_API_TYPEORM_LOG_LEVEL}
      TPS_API_MAX_QUERY_EXECUTION_TIME_MS: ${TPS_API_MAX_QUERY_EXECUTION_TIME_MS}
      DB_TYPE: ${DB_TYPE}
      MSSQL_HOST: sql-server-db
      MSSQL_PORT: ${MSSQL_PORT}
      MSSQL_DB: ${MSSQL_DB}
      MSSQL_SA_USER: ${MSSQL_SA_USER}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_ENCRYPT: ${MSSQL_ENCRYPT}
      KEYCLOAK_ISSUER_URL: ${KEYCLOAK_ISSUER_URL}
      KEYCLOAK_AUDIENCE: ${KEYCLOAK_AUDIENCE}
      KEYCLOAK_IGNORE_EXP: ${KEYCLOAK_IGNORE_EXP}
      DOPS_CVSE_FORMS_CACHE_TTL_MS: ${DOPS_CVSE_FORMS_CACHE_TTL_MS}
      OCIO_S3_ACCESSKEYID: ${OCIO_S3_ACCESSKEYID}
      OCIO_S3_BUCKET: ${OCIO_S3_BUCKET}
      OCIO_S3_PRESIGNED_URL_EXPIRY: ${OCIO_S3_PRESIGNED_URL_EXPIRY}
      OCIO_S3_ENDPOINT: ${OCIO_S3_ENDPOINT}
      OCIO_S3_KEY: ${OCIO_S3_KEY}
      OCIO_S3_SECRETACCESSKEY: ${OCIO_S3_SECRETACCESSKEY}
      TPS_POLL_LIMIT: ${TPS_POLL_LIMIT}
      TPS_PENDING_POLLING_INTERVAL: ${TPS_PENDING_POLLING_INTERVAL}
      TPS_ERROR_POLLING_INTERVAL: ${TPS_ERROR_POLLING_INTERVAL}
      TPS_MONITORING_POLLING_INTERVAL: ${TPS_MONITORING_POLLING_INTERVAL}
      CFS_PRIVATE_KEY: ${CFS_PRIVATE_KEY}
      CFS_PRIVATE_KEY_PASSPHRASE: ${CFS_PRIVATE_KEY_PASSPHRASE}
      CFS_SFTP_USERNAME: ${CFS_SFTP_USERNAME}
      CFS_SFTP_HOST: ${CFS_SFTP_HOST}
      CFS_SFTP_PORT: ${CFS_SFTP_PORT}
      CFS_REMOTE_PATH: ${CFS_REMOTE_PATH}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      sql-server-db:
        condition: service_healthy
    hostname: scheduler
    links:
      - sql-server-db
    ports:
      - "5050:5050"
