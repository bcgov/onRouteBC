---
version: "3.8"

services:
  postgres-db:
    container_name: postgres-db
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: default
      POSTGRES_DB: default
    hostname: postgres-db
    image: postgres:13
    restart: always
    volumes:
      - /pgdata

  sql-server-db:
    container_name: sql-server-db
    build:
      context: ./database/mssql
      dockerfile: Dockerfile
    environment:
      MSSQL_HOST: sql-server-db
      MSSQL_PORT: 1433
      MSSQL_DB: onroutebc
      MSSQL_SA_USER: SA
      MSSQL_SA_PASSWORD: YourStrong@Passw0rd
      MSSQL_ENCRYPT: false
      MSSQL_DDL_FILENAME: sample_ddl.sql
    hostname: sql-server-db
    ports:
      - "1433:1433"
    volumes:
      - /sql_data

  backend:
    container_name: backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      DB_TYPE: mssql
      POSTGRESQL_HOST: postgres-db
      POSTGRESQL_USER: default
      POSTGRESQL_PASSWORD: default
      POSTGRESQL_DATABASE: default
      MSSQL_HOST: sql-server-db
      MSSQL_PORT: 1433
      MSSQL_DB: onroutebc
      MSSQL_SA_USER: SA
      MSSQL_SA_PASSWORD: YourStrong@Passw0rd
      MSSQL_ENCRYPT: false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: backend
    links:
      - sql-server-db
      - postgres-db
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app:z
      - /app/node_modules

  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
      args:
        VITE_DEPLOY_ENVIRONMENT: prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: frontend
    links:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:z
      - /app/node_modules
