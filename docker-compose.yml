---
version: "3.8"

services:
  postgres-db:
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
    hostname: postgres-db
    image: postgres:13
    restart: always
    volumes:
      - /pgdata

  sql-server-db:
    container_name: sql-server-db
    build:
      context: ./database/mssql
      dockerfile: Dockerfile
    environment:
      MSSQL_HOST: sql-server-db
      MSSQL_PORT: ${MSSQL_PORT}
      MSSQL_DB: ${MSSQL_DB}
      MSSQL_SA_USER: ${MSSQL_SA_USER}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_ENCRYPT: ${MSSQL_ENCRYPT}
      MSSQL_INIT_DDL_FILENAME: ${MSSQL_INIT_DDL_FILENAME}
      MSSQL_RUN_TESTS: ${MSSQL_RUN_TESTS}
      MSSQL_LOAD_SAMPLE_DATA: ${MSSQL_LOAD_SAMPLE_DATA}
      MSSQL_MOTI_HOST: ${MSSQL_MOTI_HOST}
      MSSQL_MOTI_DB: ${MSSQL_MOTI_DB}
      MSSQL_MOTI_USER: ${MSSQL_MOTI_USER}
      MSSQL_MOTI_PASSWORD: ${MSSQL_MOTI_PASSWORD}
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S $$MSSQL_HOST -U $$MSSQL_SA_USER -P $$MSSQL_SA_PASSWORD -Q "USE $$MSSQL_DB" | grep "Changed database context to '$$MSSQL_DB'"
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 10s
    hostname: sql-server-db
    ports:
      - "1433:1433"
    volumes:
      - /sql_data

  vehicles-api:
    container_name: vehicles-api
    build:
      context: ./backend/vehicles/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      DB_TYPE: ${DB_TYPE}
      POSTGRESQL_HOST: postgres-db
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
      MSSQL_HOST: sql-server-db
      MSSQL_PORT: ${MSSQL_PORT}
      MSSQL_DB: ${MSSQL_DB}
      MSSQL_SA_USER: ${MSSQL_SA_USER}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_ENCRYPT: ${MSSQL_ENCRYPT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      sql-server-db:
        condition: service_healthy
    hostname: vehicles-api
    links:
      - sql-server-db
      - postgres-db
    ports:
      - "5000:5000"

  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    environment:
      VITE_DEPLOY_ENVIRONMENT: ${VITE_DEPLOY_ENVIRONMENT}
      VITE_API_VEHICLE_URL: ${VITE_API_VEHICLE_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: frontend
    links:
      - vehicles-api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:z
      - /app/node_modules
